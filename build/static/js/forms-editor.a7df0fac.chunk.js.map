{"version":3,"sources":["../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_equalObjects.js","components/uielements/styles/editor.style.js","components/uielements/editor.js"],"names":["baseIsEqual","__webpack_require__","module","exports","value","other","baseIsEqualDeep","isObjectLike","bitmask","customizer","stack","set","index","result","Array","size","forEach","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","array","equalFunc","isPartial","arrLength","length","othLength","stacked","get","seen","undefined","arrValue","othValue","compared","othIndex","push","predicate","map","key","Stack","equalArrays","equalByTag","equalObjects","getTag","isArray","isBuffer","isTypedArray","argsTag","arrayTag","objectTag","hasOwnProperty","Object","prototype","object","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","call","othIsWrapped","objUnwrapped","othUnwrapped","Symbol","Uint8Array","eq","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","valueOf","tag","byteLength","byteOffset","buffer","name","message","convert","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","constructor","othCtor","QuillEditor","styled","div","_templateObject","props","palette","font","WithDirection","Editor","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","handleChange","bind","assertThisInitialized","state","quillModules","toolbar","container","header","list","indent","setState","options","theme","formats","placeholder","onChange","modules","react_default","a","createElement","editor_style","lib_default","Component"],"mappings":"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","file":"static/js/forms-editor.a7df0fac.chunk.js","sourcesContent":["var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","import styled from 'styled-components';\nimport { palette, font } from 'styled-theme';\nimport WithDirection from '../../../settings/withDirection';\n\nconst QuillEditor = styled.div`\n  .ql-editor {\n    min-height: 215px;\n    text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n  }\n\n  .ql-toolbar.ql-snow,\n  .ql-container.ql-snow {\n    border: 1px solid ${palette('border', 0)};\n    text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n\n    .ql-formats {\n      margin: ${props => (props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0')};\n    }\n\n    .ql-picker-label {\n      padding: ${props =>\n        props['data-rtl'] === 'rtl' ? '0 8px 0 2px' : '0 2px 0 8px'};\n\n      &:not(.ql-color-picker):not(.ql-icon-picker) {\n        svg {\n          right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\n          left: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\n        }\n      }\n    }\n  }\n\n  .ql-container {\n    font-family: ${font('primary', 0)};\n    min-height: 220px;\n  }\n\n  .ql-editor p,\n  .ql-editor ol,\n  .ql-editor ul,\n  .ql-editor pre,\n  .ql-editor blockquote,\n  .ql-editor h1,\n  .ql-editor h2,\n  .ql-editor h3,\n  .ql-editor h4,\n  .ql-editor h5,\n  .ql-editor h6 {\n    color: ${palette('text', 0)};\n  }\n\n  .ql-snow.ql-toolbar button:hover,\n  .ql-snow .ql-toolbar button:hover,\n  .ql-snow.ql-toolbar button:focus,\n  .ql-snow .ql-toolbar button:focus,\n  .ql-snow.ql-toolbar button.ql-active,\n  .ql-snow .ql-toolbar button.ql-active,\n  .ql-snow.ql-toolbar .ql-picker-label:hover,\n  .ql-snow .ql-toolbar .ql-picker-label:hover,\n  .ql-snow.ql-toolbar .ql-picker-label.ql-active,\n  .ql-snow .ql-toolbar .ql-picker-label.ql-active,\n  .ql-snow.ql-toolbar .ql-picker-item:hover,\n  .ql-snow .ql-toolbar .ql-picker-item:hover,\n  .ql-snow.ql-toolbar .ql-picker-item.ql-selected,\n  .ql-snow .ql-toolbar .ql-picker-item.ql-selected {\n    color: ${palette('primary', 0)};\n  }\n  .ql-snow.ql-toolbar button:hover .ql-fill,\n  .ql-snow .ql-toolbar button:hover .ql-fill,\n  .ql-snow.ql-toolbar button:focus .ql-fill,\n  .ql-snow .ql-toolbar button:focus .ql-fill,\n  .ql-snow.ql-toolbar button.ql-active .ql-fill,\n  .ql-snow .ql-toolbar button.ql-active .ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-label:hover .ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-label:hover .ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-item:hover .ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-item:hover .ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-fill,\n  .ql-snow.ql-toolbar button:hover .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar button:hover .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar button:focus .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar button:focus .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar button.ql-active .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar button.ql-active .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill {\n    fill: ${palette('primary', 0)};\n  }\n  .ql-snow.ql-toolbar button:hover .ql-stroke,\n  .ql-snow .ql-toolbar button:hover .ql-stroke,\n  .ql-snow.ql-toolbar button:focus .ql-stroke,\n  .ql-snow .ql-toolbar button:focus .ql-stroke,\n  .ql-snow.ql-toolbar button.ql-active .ql-stroke,\n  .ql-snow .ql-toolbar button.ql-active .ql-stroke,\n  .ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke,\n  .ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke,\n  .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke,\n  .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke,\n  .ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke,\n  .ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke,\n  .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke,\n  .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke,\n  .ql-snow.ql-toolbar button:hover .ql-stroke-miter,\n  .ql-snow .ql-toolbar button:hover .ql-stroke-miter,\n  .ql-snow.ql-toolbar button:focus .ql-stroke-miter,\n  .ql-snow .ql-toolbar button:focus .ql-stroke-miter,\n  .ql-snow.ql-toolbar button.ql-active .ql-stroke-miter,\n  .ql-snow .ql-toolbar button.ql-active .ql-stroke-miter,\n  .ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke-miter,\n  .ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke-miter,\n  .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,\n  .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,\n  .ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke-miter,\n  .ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke-miter,\n  .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter,\n  .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter {\n    stroke: ${palette('primary', 0)};\n  }\n\n  .ql-snow a {\n    color: ${palette('primary', 0)};\n  }\n`;\n\nexport default WithDirection(QuillEditor);\n","import React, { Component } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport 'react-quill/dist/quill.core.css';\nimport QuillEditor from './styles/editor.style';\n\nexport default class Editor extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = { value: '' };\n    this.quillModules = {\n      toolbar: {\n        container: [\n          [{ header: [1, 2, false] }, { font: [] }],\n          ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n          [\n            { list: 'ordered' },\n            { list: 'bullet' },\n            { indent: '-1' },\n            { indent: '+1' },\n          ],\n          ['link', 'image', 'video'],\n          ['clean'],\n        ],\n      },\n    };\n  }\n\n  handleChange(value) {\n    this.setState({ value });\n  }\n\n  render() {\n    const options = {\n      theme: 'snow',\n      formats: Editor.formats,\n      placeholder: 'Write Something',\n      value: this.state.value,\n      onChange: this.handleChange,\n      modules: this.quillModules,\n    };\n    return (\n      <QuillEditor>\n        <ReactQuill {...options} />\n      </QuillEditor>\n    );\n  }\n}\n"],"sourceRoot":""}